
[project]
name = "xontrib-ask"
version = "0.0.1"
license = {file = "LICENSE"}
description = "A zero-dependency alternative to fzf for xonsh."
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: System :: Shells",
    "Topic :: System :: System Shells",
    "Topic :: Terminals",
]
requires-python = ">=3.8"
dependencies = ["xonsh>=0.12.5", "prompt-toolkit"]
authors = [
    { name = "Andy Kipp", email = "a@a.a" },
]
[project.readme]
file = "README.md"
content-type = "text/markdown"





[project.urls]

Homepage = "https://github.com/anki-code/xontrib-ask"
Documentation = "https://github.com/anki-code/xontrib-ask/blob/master/README.md"
Code = "https://github.com/anki-code/xontrib-ask"
"Issue tracker" = "https://github.com/anki-code/xontrib-ask/issues"




[project.optional-dependencies]
dev = ["pytest>=7.0"]



[build-system]
requires = [
    "setuptools>=62",
    "wheel",               # for bdist package distribution
]
build-backend = "setuptools.build_meta"
[tool.setuptools]

packages = ["xontrib"]
package-dir = {xontrib = "xontrib"}

platforms = ["any"]
include-package-data = false
[tool.setuptools.package-data]

xontrib = ["*.xsh"]



[tool.black]
include = '\.pyi?$'
force-exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.vscode
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | disk-cache.sqlite3
)/
'''

[tool.ruff]
select = [
    "E",
    "F",
    "B", # flake8-bugbear
    "I", # isort
    "UP", # pyupgrade
    "SIM", # simplify
    "TCH", # flake8-type-checking
    "RUF", # ruff specific rules
]
